#extension GL_EXT_gpu_shader4 : enable

varying	vec3			normal, position;

uniform	sampler2D		diffuse, specular, normal_map;

vec3 fragmentNormal(sampler2D normal_map)
{
	vec3 grain_color = texture2D(normal_map, gl_TexCoord[0].xy).xyz;
	vec3 tangentSpaceNormal = normalize(grain_color * 2.0 - 1.0);

	vec3 n = normalize(normal);
	vec3 t = normalize(gl_TexCoord[1].xyz);
	vec3 b = -normalize(gl_TexCoord[2].xyz);

	vec3 vec = t * tangentSpaceNormal.x + b * tangentSpaceNormal.y + n * tangentSpaceNormal.z;
	return normalize(vec);
}

void main()
{

	vec4 diffuse_sample = texture2D(diffuse, gl_TexCoord[0].xy);

	if(diffuse_sample.w < 0.5)
		discard;

	vec3 uNorm = fragmentNormal(normal_map);

	gl_FragData[0] = vec4(diffuse_sample.xyz, 0.0);									// diffuse color
	gl_FragData[1] = vec4(uNorm * 0.5 + 0.5, 0.0);									// normal vector
	gl_FragData[2] = vec4(texture2D(specular, gl_TexCoord[0].xy).xyz, 0.0);			// specular color
}